openapi: 3.0.0   # Open api version

info:
  title: GPT2-Rick-n-Morty-with-SpongeBob
  version: "v0.1"
  contact:
    name: AInizer - Lee hoseop
  description: |
    This app is generate Rick and Morty with SpongeBob script as array.
    ---
      How to use:
      * First, Choose Rick and Morty or SpongeBob character name.
      * Second, Fill what the character will say in text. This will be base of script.
      * And then, Fill number in length. Text is created as long as "length". I recommend between 100 and 300.
      * If length is so big, generate time will be long.

      And you can use this in demo page. >> [End point](https://master-gpt2-rick-n-morty-with-sponge-bob-fpem123.endpoint.ainize.ai/)

      Tuning base GPT-2 model >> [e-tony/gpt2-rnm](https://huggingface.co/e-tony/gpt2-rnm)

      GPT-2 model >> [gpt2-rnm-with-spongebob](https://huggingface.co/ainize/gpt2-rnm-with-spongebob)

servers:
  - url: https://master-gpt2-rick-n-morty-with-sponge-bob-fpem123.endpoint.ainize.ai/

paths:
  /gen:
    post:
      requestBody:
        required: true
        description: |
          This request will generate Rick and Morty with SpongeBob script.

          Request body example

              name: Rick
              text: Morty! SpongeBob!
              length: 150

          curl example

              curl -X POST "https://master-gpt2-rick-n-morty-with-sponge-bob-fpem123.endpoint.ainize.ai/gen" -H "accept: application/json" -H "Content-Type: multipart/form-data" -F "name=Rick" -F "text=Morty! SpongeBob!" -F "length=150"


        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  enum: [Rick, Morty, Beth, Summer, Jerry,
                        SpongeBob, Patrick, Squidward, Sandy,
                        Mr. Krabs, Plankton, Narrator]
                  description: "The Rick and Morty and SpongeBob character name."
                text:
                  type: string
                  description: "The base of script."
                length:
                  type: string
                  description: "The size of text."
              required:
                - name
                - text
                - length
      responses:   # Set response
        '200':
          description: "Successful Response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  number:
                    type: array
                    items:
                      type: array
                      items:
                        type: string
        '400':
          description: "Bad Request Error"
        '429':
          description: "Too many requests"
        '500':
          description: "Server-side Error"
